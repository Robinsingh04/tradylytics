@use 'variables' as vars;

// Flexbox mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: vars.$breakpoint-sm - 1) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: vars.$breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: vars.$breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: vars.$breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: vars.$breakpoint-xl) { @content; }
  }
}

// Typography mixins
@mixin typography($size, $weight: normal, $line-height: normal) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
}

// Transition mixins
@mixin transition($property: all, $duration: vars.$transition-medium, $timing: ease) {
  transition: $property $duration $timing;
}

// Box shadow mixins
@mixin shadow-sm {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
}

@mixin shadow-md {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15), 0 2px 4px rgba(0, 0, 0, 0.12);
}

@mixin shadow-lg {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15), 0 6px 6px rgba(0, 0, 0, 0.10);
}

// Truncate text with ellipsis
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Create a circle with specified size
@mixin circle($size) {
  width: $size;
  height: $size;
  border-radius: 50%;
} 